{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../product/product.component\";\nfunction ProductsComponent_app_product_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-product\", 5);\n    i0.ɵɵlistener(\"productClickEvent\", function ProductsComponent_app_product_5_Template_app_product_productClickEvent_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeProduct(product_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"productName\", product_r2);\n  }\n}\nexport let ProductsComponent = /*#__PURE__*/(() => {\n  class ProductsComponent {\n    constructor(productService) {\n      this.productService = productService;\n      this.productName = \"A book\";\n      this.productList = [\"Book\", \"Laptop\", \"Box\"];\n      this.isEnabled = true;\n    }\n    ngOnInit() {\n      this.productSubscription = this.productService.productsUpdated.subscribe(() => {\n        this.productList = this.productService.getProducts();\n      });\n    }\n    addProduct(form) {\n      //this.productList.push(this.productName);\n      console.log(form.controls.productName.value);\n      this.productList.push(form.controls.productName.value);\n    }\n    removeProduct(productName) {\n      this.productList = this.productList.filter(product => product !== productName);\n    }\n    /**\r\n     * TODO: I think this method is not getting triggered, do a POC to see how this ngOnDestroy() method works.\r\n     */\n    ngOnDestroy() {\n      console.log(\"In ngOnDestroy method\");\n      this.productSubscription.unsubscribe();\n    }\n    static #_ = this.ɵfac = function ProductsComponent_Factory(t) {\n      return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i1.ProductService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductsComponent,\n      selectors: [[\"app-products\"]],\n      decls: 6,\n      vars: 1,\n      consts: [[3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"type\", \"text\", \"name\", \"productName\", \"id\", \"\", \"ngModel\", \"\"], [\"type\", \"submit\"], [3, \"productName\", \"productClickEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"productName\", \"productClickEvent\"]],\n      template: function ProductsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r5 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 0, 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ProductsComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r5);\n            const _r0 = i0.ɵɵreference(1);\n            return i0.ɵɵresetView(ctx.addProduct(_r0));\n          });\n          i0.ɵɵelement(2, \"input\", 2);\n          i0.ɵɵelementStart(3, \"button\", 3);\n          i0.ɵɵtext(4, \"Add products\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(5, ProductsComponent_app_product_5_Template, 1, 1, \"app-product\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.productList);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.ProductComponent]\n    });\n  }\n  return ProductsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}